name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: ${{ matrix.tox-env }} on Python ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        include: # Добавляем lint и typing только для Python 3.13
          - python-version: '3.9'
            tox-env: py39
          - python-version: '3.10'
            tox-env: py310
          - python-version: '3.11'
            tox-env: py311
          - python-version: '3.12'
            tox-env: py312
          - python-version: '3.13'
            tox-env: py313
          - python-version: '3.13'
            tox-env: typing


    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv and tox
      run: |
        python -m pip install --upgrade pip uv
        pip install tox tox-uv

    - name: Run tox environment (${{ matrix.tox-env }})
      run: tox -e ${{ matrix.tox-env }}
      env:
        # Переменные окружения, если нужны для тестов
        # MY_API_KEY: ${{ secrets.MY_API_KEY_FOR_TESTS }}
        PYTHON_VERSION: ${{ matrix.python-version }}

    - name: Upload coverage to Codecov
      if: startsWith(matrix.tox-env, 'py')
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml # Путь указан в tox.ini
        flags: python${{ matrix.python-version }}
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
        fail_ci_if_error: true
      continue-on-error: true # Не ронять CI, если токен недоступен (например, в PR от форков)

    - name: Upload coverage to Coveralls
      if: startsWith(matrix.tox-env, 'py')
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        # repo_token: ${{ secrets.COVERALLS_REPO_TOKEN }}
        path-to-lcov: ./coverage.lcov
        flag-name: run-${{ matrix.python-version }}
        parallel: true


  coveralls-finish:
    name: Mark Coveralls build as finished
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        repo_token: ${{ secrets.COVERALLS_REPO_TOKEN }}
        parallel-finished: true
        # Если автодетекция не сработает  # build-number: ${{ github.run_id }}
