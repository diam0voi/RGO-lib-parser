name: Build Cross-Platform Release (Current Version)

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  # ----------------------- Задача для сборки под Windows -----------------------
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    if: github.event.release.tag_name != 'v1.0'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile --windowed --icon="assets/winapp_lilacbook.ico" --add-data "assets/window_bnwbook.png;." --name RGO_lib_parser src/ru_geo_lib_parser_by_b0s.py

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/RGO_lib_parser.exe
          asset_name: RGO_lib_parser_win64.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  # ----------------------- Задача для сборки под macOS -----------------------
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    if: github.event.release.tag_name != 'v1.0'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --windowed --icon="assets/macapp_lilacbook.icns" --add-data "assets/window_bnwbook.png:." --name "RGO Lib Parser" src/ru_geo_lib_parser_by_b0s.py

      - name: Create Zip Archive of .app
        run: zip -r ./dist/RGO_lib_parser_macOS.zip ./dist/"RGO Lib Parser.app"

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/RGO_lib_parser_macOS.zip
          asset_name: RGO_lib_parser_macOS.zip
          asset_content_type: application/zip

  # ----------------------- Задача для сборки под Linux (Ubuntu) -----------------------
  build-linux:
    name: Build for Linux (Ubuntu)
    runs-on: ubuntu-latest
    if: github.event.release.tag_name != 'v1.0'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Tkinter (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build with PyInstaller
        run: pyinstaller --onefile --noconsole --add-data "assets/window_bnwbook.png:." --name RGO_lib_parser src/ru_geo_lib_parser_by_b0s.py

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/RGO_lib_parser
          asset_name: RGO_lib_parser_ubuntu
          asset_content_type: application/octet-stream